{"version":3,"sources":["redux/words/constants.js","redux/words/word.js","redux/dictionaries/constants.js","redux/constants.js","redux/words/index.js","redux/dictionaries/dictionary.js","redux/dictionaries/index.js","redux/definations/defination.js","redux/definations/index.js","redux/reducer.js","lib/router.js","pages/words/index.js","api/cambridge.js","redux/dictionaries/actions.js","redux/actions.js","redux/hooks.js","redux/words/actions.js","pages/words/word.js","pages/dictionaries/dictionary.js","pages/dictionaries/index.js","App.js","db/index.js","api/schema.js","index.js"],"names":["INCRESDE_WORD_SEARCH_COUNT","REQUEST_FETCHING_WORD","SUCCESS_FETCHING_WORD","REJECT_FETCHING_WORD","combineReducers","id","state","arguments","length","undefined","action","type","$","payload","name","explanations","searchCounter","isFetching","ADD_DICTIONARY","DEL_DICTIONARY","MAP_DEFINATION_TO_DICTIONARY","UNMAP_DEFINATION_TO_DICTIONARY","ADD_ENTITIES","RESTORE_FROM_INDEXEDDB","words","includes","Object","objectSpread","defineProperty","word","mapValues","w","definations","concat","toConsumableArray","definationId","filter","defaultDictionary","dictionary","dictionaries","newDictionary","dictionaryId","objectWithoutProperties","map","_toPropertyKey","d","level","domain","text","translate","examples","defination","result","basepath","BaseRouter","props","react_default","a","createElement","router_es","assign","Link","_ref","to","navigate","_len","args","Array","_key","reachNavigate","apply","Words","children","apiDomain","fetchAutoCompleteJson","_x","_fetchAutoCompleteJson","this","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","fetchWord","_x2","_fetchWord","_callee2","_context2","toggleMappingDefinationToDictionary","dispatch","getState","_ref4","db","set","delete","unmapDefinationToDictionary","_ref3","mapDefinationToDictionary","addEntities","entities","useWord","wordId","useMappedState","useCallback","useDispatch","useEffect","_ref2","asyncToGenerator","mark","schema","data","normalize","t0","console","error","_x3","Title","Typography","Paragraph","TabPane","Tabs","Word","style","margin","spin","spinning","tabs","explaination","tab","avatar","background","marginRight","pos","key","marginBottom","icon","IpaAction","region","ipaUS","ipaUK","list","itemLayout","dataSource","senses","renderItem","renderSense","renderExplaination","skeleton","sense","Item","guideWord","bordered","Defination","useDefination","_useState","useState","_useState2","slicedToArray","dropdownVisibility","setDropdownVisibility","reduxToggleMappingDefinationToDictionary","menu","es_menu","onMouseLeave","es_checkbox","checked","onChange","flexDirection","Meta","title","badge","count","description","dropdown","overlay","visible","onMouseEnter","cursor","color","renderExample","example","html","audioUrl","_useState3","_useState4","isPlaying","setPlaying","audio","useMemo","Audio","addEventListener","handleTextClick","play","onClick","dangerouslySetInnerHTML","__html","Dictionary","defId","grid","gutter","column","renderDefination","card","Dictionaries","DictionaryIndex","path","newDictionaryName","setNewDictionaryName","addDictionary","rawDictionary","input","value","e","target","onPressEnter","placeholder","suffix","DictionaryCard","delDictionary","_","Header","Layout","Content","Sider","Main","useDictionaries","_useSuggestion","suggestions","setSuggestion","handleSuggestion","results","s","searchtext","useSuggestion","_useSuggestion2","handleSearch","layout","className","collapsible","collapsedWidth","theme","mode","defaultOpenKeys","SubMenu","auto_complete","onSelect","onSearch","Search","storeNames","dbPromise","openDB","upgrade","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","createObjectStore","err","return","stores","get","_get","t1","getAll","_getAll","_set","_callee3","val","_context3","t2","put","_delete2","_callee4","_context4","_x4","clear","_clear","_callee5","_context5","keys","_keys","_callee6","_context6","getAllKeys","mapKeys","i","createStores","Entity","define","devtool","compose","store","createStore","reducer","applyMiddleware","thunk","withExtraArgument","dictionaryPromises","definationPromises","then","dictionaryIds","promises","Promise","all","definationIds","render","index_es","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.f8a93090.chunk.js","sourcesContent":["export const INCRESDE_WORD_SEARCH_COUNT = 'INCRESDE_WORD_SEARCH_COUNT';\nexport const REQUEST_FETCHING_WORD = 'REQUEST_FETCHING_WORD';\nexport const SUCCESS_FETCHING_WORD = 'SUCCESS_FETCHING_WORD'\nexport const REJECT_FETCHING_WORD = 'REJECT_FETCHING_WORD';\n","import { combineReducers } from 'redux';\nimport * as $ from './constants';\n\nconst id = (state = '', action) => {\n  switch (action.type) {\n    case $.REQUEST_FETCHING_WORD:\n      return action.payload.id;\n    default:\n      return state;\n  }\n}\n\nconst name = (state = '') => {\n  return state;\n}\n\nconst explanations = (state = []) => {\n  return state;\n}\n\nconst searchCounter = (state = 0, action) => {\n  switch (action.type) {\n    case $.INCRESDE_WORD_SEARCH_COUNT:\n      return state + 1;\n    default:\n      return state;\n  }\n}\n\nconst isFetching = (state = false, action) => {\n  switch (action.type) {\n    case $.REQUEST_FETCHING_WORD:\n      return true;\n    case $.SUCCESS_FETCHING_WORD:\n    case $.REJECT_FETCHING_WORD:\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  id,\n  name,\n  explanations,\n  searchCounter,\n  isFetching,\n});\n","export const ADD_DICTIONARY = 'ADD_DICTIONARY';\nexport const DEL_DICTIONARY = 'DEL_DICTIONARY';\nexport const TOGGLE_DEFINATION_IN_DICTIONARY = 'TOGGLE_DEFINATION_IN_DICTIONARY';\nexport const MAP_DEFINATION_TO_DICTIONARY = 'MAP_DEFINATION_TO_DICTIONARY';\nexport const UNMAP_DEFINATION_TO_DICTIONARY = 'UNMAP_DEFINATION_TO_DICTIONARY';\n","export * from './dictionaries/constants';\nexport * from './words/constants';\n\nexport const ADD_ENTITIES = 'ADD_ENTITIES';\nexport const RESTORE_FROM_INDEXEDDB = 'RESTORE_FROM_INDEXEDDB';\n","import { mapValues } from 'lodash';\nimport word from './word';\nimport { ADD_ENTITIES, RESTORE_FROM_INDEXEDDB } from '../constants';\n\nconst words = (state = {}, action) => {\n  if (action.type.includes('WORD')) {\n    return {\n      ...state,\n      [action.payload.id]: word(\n        state[action.payload.id],\n        action\n      ),\n    };\n  }\n\n  switch (action.type) {\n    case ADD_ENTITIES:\n    case RESTORE_FROM_INDEXEDDB:\n      return {\n        ...state,\n        ...mapValues(action.payload.words, w => word({\n          ...state[w.id],\n            ...w,\n          },\n          action,\n        )),\n      }\n    default:\n      return state;\n  }\n}\n\nexport default words;\n","import { combineReducers } from 'redux';\nimport * as $ from './constants';\n\nconst id = (state = 'default', action) => {\n  switch (action.type) {\n    case $.ADD_DICTIONARY:\n      return action.payload.id;\n    default:\n      return state;\n  }\n}\n\nconst name = (state = 'default', action) => {\n  switch (action.type) {\n    case $.ADD_DICTIONARY:\n      return action.payload.name;\n    default:\n      return state;\n  }\n}\n\nconst definations = (state = [], action) => {\n  switch (action.type) {\n    case $.MAP_DEFINATION_TO_DICTIONARY:\n\n      return [\n        ...state,\n        action.payload.definationId,\n      ];\n\n    case $.UNMAP_DEFINATION_TO_DICTIONARY:\n      return state.filter(\n        definationId => definationId !== action.payload.definationId\n      );\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  id,\n  name,\n  definations,\n});\n","import { mapValues } from 'lodash';\nimport dictionary from './dictionary';\nimport * as $ from '../constants';\n\nconst defaultDictionary = dictionary(undefined, { type: '@@INIT' });\n\nconst dictionaries = (\n  state = {\n    [defaultDictionary.id]: defaultDictionary,\n  },\n  action\n) => {\n  switch (action.type) {\n    case $.ADD_DICTIONARY:\n      const newDictionary = dictionary(undefined, action);\n\n      return {\n        ...state,\n        [newDictionary.id]: newDictionary,\n      };\n    case $.DEL_DICTIONARY:\n      const { dictionaryId } = action.payload;\n      const { [dictionaryId]: _, ...restState } = state;\n      return restState;\n    case $.MAP_DEFINATION_TO_DICTIONARY:\n    case $.UNMAP_DEFINATION_TO_DICTIONARY:\n      return {\n        ...state,\n        [action.payload.dictionaryId]: dictionary(\n          state[action.payload.dictionaryId],\n          action,\n        ),\n      };\n    case $.RESTORE_FROM_INDEXEDDB:\n      return {\n        ...state,\n        ...mapValues(action.payload.dictionaries, d => {\n          return dictionary(\n            {\n              ...state[d.id],\n              ...d,\n            },\n            action,\n          );\n        }),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default dictionaries;\n","import { combineReducers } from 'redux';\nimport { MAP_DEFINATION_TO_DICTIONARY, UNMAP_DEFINATION_TO_DICTIONARY } from '../constants';\n\nconst id = (state = '') => {\n  return state;\n}\n\nconst word = (state = '') => {\n  return state;\n}\n\nconst level = (state = '') => {\n  return state;\n}\n\nconst domain = (state = '') => {\n  return state;\n}\n\nconst text = (state = '') => {\n  return state;\n}\n\nconst translate = (state = '') => {\n  return state;\n}\n\nconst examples = (state = []) => {\n  return state;\n}\n\nconst dictionaries = (state = [], action) => {\n  switch (action.type) {\n    case MAP_DEFINATION_TO_DICTIONARY:\n      return [\n        ...state,\n        action.payload.dictionaryId,\n      ];\n    case UNMAP_DEFINATION_TO_DICTIONARY:\n      return state.filter(\n        dictionaryId => dictionaryId !== action.payload.dictionaryId\n      );\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  id,\n  word,\n  level,\n  domain,\n  text,\n  translate,\n  examples,\n  dictionaries,\n});\n","import { mapValues } from 'lodash';\nimport defination from './defination';\nimport { MAP_DEFINATION_TO_DICTIONARY, UNMAP_DEFINATION_TO_DICTIONARY } from '../dictionaries/constants';\nimport { ADD_ENTITIES, RESTORE_FROM_INDEXEDDB } from '../constants';\n\nconst definations = (state = {}, action) => {\n  switch (action.type) {\n    case ADD_ENTITIES:\n      return {\n        ...state,\n        ...mapValues(action.payload.definations, d => {\n          return defination(\n            {\n              ...state[d.id],\n              ...d,\n              word: action.result,\n            },\n            action,\n          )\n        }),\n      };\n    case RESTORE_FROM_INDEXEDDB:\n      return {\n        ...state,\n        ...mapValues(action.payload.definations, d => {\n          return defination(\n            {\n              ...state[d.id],\n              ...d,\n            },\n            action,\n          )\n        }),\n      };\n    case MAP_DEFINATION_TO_DICTIONARY:\n    case UNMAP_DEFINATION_TO_DICTIONARY:\n      return {\n        ...state,\n        [action.payload.definationId]: defination(\n          state[action.payload.definationId],\n          action\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default definations;\n","import { combineReducers } from 'redux';\nimport words from './words';\nimport dictionaries from './dictionaries';\nimport definations from './definations';\n\nexport default combineReducers({\n  words,\n  dictionaries,\n  definations,\n})\n","import React from 'react';\nimport {\n  Router,\n  Link as ReachLink,\n  navigate as reachNavigate } from '@reach/router';\n\n// const isDevelopment = process.env.NODE_ENV === 'development';\nconst isDevelopment = false;\n\nconst basepath = isDevelopment ? '/' : '/river';\n\nexport function BaseRouter(props) {\n  return (\n    <Router basepath={basepath} {...props} />\n  );\n}\n\nexport function Link({ to, ...props}) {\n  return (\n    <ReachLink to={basepath + to} {...props} />\n  )\n}\n\nexport function navigate(to, ...args) {\n  return reachNavigate(basepath + to, ...args);\n}\n","import React from 'react';\n\nexport default function Words({ children }) {\n  return (\n    <div>\n      { children }\n    </div>\n  );\n}\n","const apiDomain = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:9527'\n  : 'https://river.qas612820704.now.sh';\n\nexport async function fetchAutoCompleteJson(word) {\n  const response = await fetch(`${apiDomain}/cambridge/english-chinese-traditional/auto-complete/${word}`)\n\n  return response.json();\n}\n\nexport async function fetchWord(word) {\n  const response = await fetch(`${apiDomain}/cambridge/english-chinese-traditional/${word}`);\n\n  return response.json();\n}\n\n","import * as $ from './constants';\n\nexport function addDictionary(rawDictionary) {\n  return (dispatch, getState, { db }) => {\n    const dictionaryId = rawDictionary.name;\n\n    dispatch({\n      type: $.ADD_DICTIONARY,\n      payload: {\n        id: dictionaryId,\n        ...rawDictionary,\n      },\n    });\n\n    const dictionary = getState().dictionaries[dictionaryId];\n\n    db.dictionaries.set(dictionaryId, dictionary);\n  }\n}\nexport function delDictionary(dictionaryId) {\n  return (dispatch, _, { db }) => {\n    dispatch({\n      type: $.DEL_DICTIONARY,\n      payload: {\n        dictionaryId,\n      },\n    });\n\n    db.dictionaries.delete(dictionaryId);\n  };\n}\nexport function mapDefinationToDictionary(definationId, dictionaryId='default') {\n  return (dispatch, getState, { db }) => {\n\n    dispatch({\n      type: $.MAP_DEFINATION_TO_DICTIONARY,\n      payload: {\n        dictionaryId,\n        definationId,\n      }\n    })\n\n    const dictionary = getState().dictionaries[dictionaryId];\n    const defination = getState().definations[definationId];\n    // TODO: this is async\n    db.dictionaries.set(dictionaryId, dictionary);\n    db.definations.set(definationId, defination);\n\n  }\n}\nexport function unmapDefinationToDictionary(definationId, dictionaryId='default') {\n  return (dispatch, getState, { db }) => {\n    dispatch({\n      type: $.UNMAP_DEFINATION_TO_DICTIONARY,\n      payload: {\n        dictionaryId,\n        definationId,\n      }\n    });\n\n    const dictionary = getState().dictionaries[dictionaryId];\n    db.dictionaries.set(dictionaryId, dictionary);\n    db.definations.delete(definationId);\n  };\n}\n\nexport function toggleMappingDefinationToDictionary(definationId, dictionaryId) {\n  return (dispatch, getState) => {\n    const defination = getState().definations[definationId];\n\n    return defination.dictionaries.includes(dictionaryId)\n      ? dispatch(unmapDefinationToDictionary(definationId, dictionaryId))\n      : dispatch(mapDefinationToDictionary(definationId, dictionaryId));\n  };\n}\n","import { mapKeys } from 'lodash';\nimport { ADD_ENTITIES, RESTORE_FROM_INDEXEDDB } from './constants';\nexport * from './words/actions';\nexport * from './dictionaries/actions';\n\nexport function addEntities(entities, result) {\n  return {\n    type: ADD_ENTITIES,\n    payload: entities,\n    result,\n  };\n}\n\nexport function restoreFromIndexedDB() {\n  return async (dispatch, getState, { db }) => {\n    const dictionaryPromises = db.dictionaries\n      .keys()\n      .then(dictionaryIds => dictionaryIds.map(id => db.dictionaries.get(id)))\n      .then(promises => Promise.all(promises));\n    const definationPromises = db.definations\n      .keys()\n      .then(definationIds => definationIds.map(id => db.definations.get(id)))\n      .then(promises => Promise.all(promises));\n\n    const [ dictionaries, definations ] = await Promise.all([ dictionaryPromises, definationPromises ]);\n\n    return dispatch({\n      type: RESTORE_FROM_INDEXEDDB,\n      payload: {\n        dictionaries: mapKeys(dictionaries, d => d.id),\n        definations: mapKeys(definations, d => d.id),\n      },\n    });\n  };\n}\n","import { useEffect, useCallback } from 'react';\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { map } from 'lodash';\nimport { getWord, increaseWordSearchCount } from './actions';\n\nexport function useWord(wordId) {\n  const word = useMappedState(\n    useCallback(\n      state => state.words[wordId],\n      [wordId],\n    ),\n  );\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => { increaseWordSearchCount(wordId) },\n    [wordId],\n  );\n\n  if (!word) {\n    dispatch(getWord(wordId));\n  }\n\n  return {\n    word,\n  }\n}\n\nexport function useDefination(definationId) {\n  const defination = useMappedState(\n    useCallback(\n      state => {\n        const defination = state.definations[definationId];\n\n        return defination;\n      },\n      [definationId],\n    ),\n  );\n\n  return {\n    defination,\n  }\n}\n\nexport function useDictionaries() {\n  const dictionaries = useMappedState(\n    useCallback(\n      state => state.dictionaries,\n      [],\n    ),\n  );\n\n  return {\n    dictionaries: map(dictionaries),\n  };\n}\n\nexport function useDictionary(dictionaryId) {\n  const dictionary = useMappedState(\n    useCallback(\n      state => state.dictionaries[dictionaryId],\n      [dictionaryId],\n    ),\n  );\n\n  return {\n    dictionary,\n  };\n}\n","import { normalize } from 'normalizr';\nimport * as $ from './constants';\nimport { addEntities } from '../actions';\nimport { fetchWord } from '../../api/cambridge';\n\nexport function getWord(id) {\n  return async (dispatch, getState, { schema }) => {\n    let isCached = getState().words[id];\n\n    if (!isCached) {\n      dispatch({\n        type: $.REQUEST_FETCHING_WORD,\n        payload: { id },\n      });\n\n      try {\n        const result = await fetchWord(id);\n\n        const data = normalize(result, schema.word);\n\n        dispatch(addEntities(data.entities, data.result));\n\n        dispatch({\n          type: $.SUCCESS_FETCHING_WORD,\n          payload: { id },\n        });\n      } catch (e) {\n        console.error(e);\n        dispatch({\n          type: $.REJECT_FETCHING_WORD,\n          payload: { id },\n        });\n      }\n    }\n\n    return getState().words[id];\n  }\n}\n\nexport function increaseWordSearchCount(id) {\n  return {\n    type: $.INCRESDE_WORD_SEARCH_COUNT,\n    payload: { id },\n  };\n}\n","import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { map } from 'lodash';\nimport { Avatar, Badge, Spin, Tabs, Icon, List, Typography, Skeleton, Menu, Checkbox, Dropdown } from 'antd';\nimport {\n  useWord, useDefination\n} from '../../redux/hooks';\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { toggleMappingDefinationToDictionary as reduxToggleMappingDefinationToDictionary } from '../../redux/actions';\n\nconst { Title, Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Word({ wordId }) {\n  const { word } = useWord(wordId);\n\n  if (!word) {\n    return  (\n      <Spin>\n        <Skeleton />\n      </Spin>\n    );\n  }\n\n  return (\n    <section style={{ margin: '16px 0' }}>\n      <Spin spinning={word.isFetching}>\n        <Title>{wordId}</Title>\n        <Tabs>\n        { word.explanations.map(explaination => (\n          <TabPane\n            tab={\n              <span>\n                <Avatar style={{ background: '#008dff', marginRight: 8 }}>{explaination.pos}</Avatar>\n                {explaination.pos}\n              </span>\n            }\n            key={explaination.pos}\n          >\n          { renderExplaination(explaination) }\n          </TabPane>\n        ))}\n        </Tabs>\n      </Spin>\n    </section>\n  );\n}\n\nfunction renderExplaination(explaination) {\n  return (\n    <div>\n      <Paragraph style={{ marginBottom: 16 }}>\n        <Icon type=\"notification\" style={{marginRight: 16}} />\n        <IpaAction region=\"US\" {...explaination.ipaUS} />\n        <IpaAction region=\"UK\" {...explaination.ipaUK} />\n      </Paragraph>\n      <List\n        itemLayout=\"vertical\"\n        dataSource={explaination.senses}\n        renderItem={renderSense}\n      />\n    </div>\n  )\n}\n\nfunction renderSense(sense) {\n  return (\n    <List.Item>\n      { sense.guideWord &&\n        <Title level={4}>\n          <Icon type=\"radar-chart\" style={{ marginRight: 8 }} />\n          {sense.guideWord}\n        </Title>\n      }\n      <List bordered\n        itemLayout=\"vertical\"\n        dataSource={sense.definations}\n        renderItem={definationId => <Defination definationId={definationId}/>}\n      />\n    </List.Item>\n  )\n}\n\nexport function Defination({ definationId }) {\n  const { defination } = useDefination(definationId);\n\n  const [dropdownVisibility, setDropdownVisibility] = useState(false);\n\n  const dictionaries = useMappedState(\n    state => map(state.dictionaries),\n    [],\n  );\n\n  const dispatch = useDispatch();\n  const toggleMappingDefinationToDictionary = useCallback(\n    (definationId, dictionaryId) => dispatch(reduxToggleMappingDefinationToDictionary(definationId, dictionaryId)),\n    [],\n  );\n\n  const menu = (\n    <Menu onMouseLeave={() => setDropdownVisibility(false)}>\n    { dictionaries.map(d => (\n      <Menu.Item key={d.id}>\n        <Checkbox\n          checked={d.definations.includes(definationId)}\n          onChange={() => toggleMappingDefinationToDictionary(definationId, d.id)}\n        >\n        {d.name}\n        </Checkbox>\n      </Menu.Item>\n    ))}\n    </Menu>\n  )\n\n  return (\n    <List.Item style={{ flexDirection: 'column' }}>\n      <List.Item.Meta\n        title={\n          <span>\n            <Badge\n              style={{ marginRight: 8, background: '#52c41a' }}\n              count={defination.level}\n            />\n            { defination.text }\n          </span>\n        }\n        description={\n          <span>\n            <Dropdown\n              overlay={menu}\n              visible={dropdownVisibility}\n              onMouseEnter={() => setDropdownVisibility(true)}\n            >\n              <Icon\n                type=\"plus\"\n                style={{ marginRight: 8, cursor: 'pointer' }}\n              />\n            </Dropdown>\n            <span style={{ color: '#1890ff' }}>{defination.translate}</span>\n          </span>\n        }\n      />\n      <List\n        itemLayout=\"vertical\"\n        dataSource={defination.examples}\n        renderItem={renderExample}\n      />\n    </List.Item>\n  )\n}\n\nfunction renderExample(example) {\n  return (\n    <List.Item>\n      <Paragraph>{example.text}</Paragraph>\n      <Paragraph style={{ color: '#40a9ff' }}>{example.translate}</Paragraph>\n    </List.Item>\n  )\n}\n\nfunction IpaAction({ region, html, audioUrl }) {\n  const [ isPlaying, setPlaying ] = useState(false);\n\n  const audio = useMemo(() => new Audio(audioUrl), [audioUrl]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => {\n      setPlaying(false);\n    });\n  }, [audio]);\n\n\n  const handleTextClick = useCallback(\n    () => {\n      setPlaying(true);\n      audio.play();\n    },\n    [audio],\n  );\n\n  return (\n    <span\n      style={{ marginRight: 16, cursor: 'pointer' }}\n      onClick={handleTextClick}\n    >\n      <Avatar style={{marginRight: 8, background: isPlaying ? '#fa8c16' : '' }}>{region}</Avatar>\n      /<span dangerouslySetInnerHTML={{ __html: html }}/>/\n    </span>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { useMappedState } from 'redux-react-hook';\nimport { Link } from '../../lib/router';\nimport { List, Card, Badge, Spin } from 'antd';\n\nexport default function Dictionary({ dictionaryId }) {\n  const dictionary = useMappedState(\n    useCallback(\n      state => {\n        const dictionary = state.dictionaries[dictionaryId];\n\n        if (!dictionary) return undefined;\n\n        return {\n          ...dictionary,\n          definations: dictionary.definations.map(\n            defId => state.definations[defId],\n          )\n        }\n      },\n      [dictionaryId],\n    ),\n  );\n\n  if (!dictionary)\n      return (\n        <Spin />\n      )\n\n  return (\n    <List\n      grid={{ gutter: 16, column: 4 }}\n      dataSource={dictionary.definations}\n      renderItem={renderDefination}\n    />\n  )\n}\n\nfunction renderDefination(defination) {\n  return (\n    <List.Item>\n      <Card>\n        <Card.Meta\n          title={\n            <span>\n              <Badge\n                style={{ marginRight: 8, background: '#52c41a' }}\n                count={defination.level}\n              />\n              <Link to={`/words/${defination.word}`}>\n                {defination.word}\n              </Link>\n            </span>\n          }\n          description={defination.translate}\n        />\n      </Card>\n    </List.Item>\n  )\n}\n","import React, { useState, useCallback } from 'react';\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { Router } from '@reach/router';\nimport { navigate } from '../../lib/router';\nimport { map } from 'lodash';\nimport { Input, Icon, Card, List } from 'antd';\nimport  Dictionary from './dictionary';\nimport { addDictionary as reduxAddDictionary, delDictionary as reduxDelDictionary } from '../../redux/actions';\n\nexport default function Dictionaries() {\n  return (\n    <div>\n      <Router>\n        <DictionaryIndex path=\"/\" />\n        <Dictionary path=\":dictionaryId\" />\n      </Router>\n    </div>\n  );\n}\n\nfunction DictionaryIndex() {\n  const [newDictionaryName, setNewDictionaryName] = useState('');\n  const dispatch = useDispatch();\n  const addDictionary = useCallback(\n    () => {\n      setNewDictionaryName('');\n      dispatch(reduxAddDictionary({ name: newDictionaryName }));\n    },\n    [newDictionaryName],\n  );\n\n  const dictionaries = useMappedState(\n    state => map(state.dictionaries),\n    [],\n  );\n\n  return (\n    <div>\n      <Input\n        value={newDictionaryName}\n        onChange={e => setNewDictionaryName(e.target.value)}\n        onPressEnter={addDictionary}\n        placeholder='Add dictionary'\n        suffix={<Icon onClick={addDictionary} type='plus'/>}\n        style={{ marginBottom: '2em' }}\n      />\n      <List\n        grid={{ gutter: 16, column: 4 }}\n        dataSource={dictionaries}\n        renderItem={dictionary => <DictionaryCard dictionary={dictionary} />}\n      />\n    </div>\n  );\n}\n\nfunction DictionaryCard({ dictionary }) {\n  const dispatch = useDispatch();\n  const delDictionary = useCallback(\n    () => dispatch(reduxDelDictionary(dictionary.id)),\n    [dictionary.id],\n  );\n\n  return (\n    <List.Item\n      style={{ cursor: 'pointer' }}\n      onClick={() => navigate(`/dictionaries/${dictionary.id}`)}\n    >\n      <Card>\n        <Card.Meta\n          title={\n            <span>\n              { dictionary.id !== 'default' && (\n                <Icon\n                  type=\"minus\"\n                  style={{ marginRight: 8, color: '#f5222d' }}\n                  onClick={delDictionary}\n                />\n              )}\n              { dictionary.name }\n            </span>\n          }\n        />\n      </Card>\n    </List.Item>\n  )\n}\n","import React, { useState, useCallback } from 'react';\nimport { BaseRouter, Link, navigate } from './lib/router';\nimport { Layout, Input, AutoComplete, Avatar, Menu, Icon } from 'antd';\nimport Words from './pages/words';\nimport Word from './pages/words/word';\nimport Dictionaries from './pages/dictionaries';\nimport { useDictionaries } from './redux/hooks';\nimport { fetchAutoCompleteJson } from './api/cambridge';\nimport './App.scss';\n\nconst { Header ,Content, Sider } = Layout;\n\nexport default function App() {\n  return (\n    <BaseRouter>\n      <Main path=\"/\">\n        <Words path=\"words\">\n          <Word path=\":wordId\"/>\n        </Words>\n        <Dictionaries path=\"dictionaries/*\" />\n      </Main>\n    </BaseRouter>\n  );\n};\n\nfunction Main({ children }) {\n  const { dictionaries } = useDictionaries();\n\n  const [ suggestions, handleSuggestion ] = useSuggestion();\n\n  const handleSearch = useCallback(\n    word => navigate(`/words/${word}`),\n    [],\n  );\n\n  return (\n    <Layout>\n      <Sider className=\"sider\" collapsible collapsedWidth=\"0\">\n        <div className=\"sider__brand\">\n          <Avatar className=\"sider__brand__avatar\">R</Avatar>\n        </div>\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultOpenKeys={['dictionaries']}\n        >\n          <Menu.SubMenu\n            key='dictionaries'\n            title={<span><Icon type=\"book\" /><span>Dictionaries</span></span>}\n          >\n          { dictionaries.map(dictionary => (\n            <Menu.Item key={dictionary.id}>\n              <Link to={`/dictionaries/${dictionary.id}`}>{ dictionary.name }</Link>\n            </Menu.Item>\n          ))}\n            <Menu.Item key='new-dictionary'>\n              <Link to='/dictionaries'><Icon type=\"plus\" /><span>New Dictionary</span></Link>\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </Sider>\n      <Layout className='main'>\n        <Header className=\"header\">\n          <AutoComplete\n            className='header__search-bar'\n            dataSource={suggestions}\n            onSelect={handleSearch}\n            onSearch={handleSuggestion}\n          >\n            <Input.Search\n              placeholder=\"translate...\"\n              onSearch={handleSearch}\n            />\n          </AutoComplete>\n        </Header>\n        <Content className='content__container'>\n          <div className='content'>\n            { children }\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nfunction useSuggestion() {\n  const [ suggestions, setSuggestion ] = useState([]);\n\n  const handleSuggestion = useCallback(\n    async (value) => {\n      if (value === '') return;\n      const { results: suggestions } = await fetchAutoCompleteJson(value);\n      setSuggestion(suggestions.map(s => s.searchtext));\n    },\n    [],\n  );\n\n  return [ suggestions, handleSuggestion ];\n}\n","import { mapKeys } from 'lodash';\nimport { openDB } from 'idb';\nimport { name } from '../../package.json';\n\nfunction createStores(storeNames = []) {\n  const dbPromise = openDB(name, 1, {\n    upgrade(db) {\n      for (let name of storeNames) {\n        db.createObjectStore(name);\n      }\n    }\n  });\n\n  const stores = storeNames.map(name => {\n    const api = {\n      async get(key) {\n        return (await dbPromise).get(name, key);\n      },\n      async getAll() {\n        return (await dbPromise).getAll(name);\n      },\n      async set(key, val) {\n        return (await dbPromise).put(name, val, key);\n      },\n      async delete(key) {\n        return (await dbPromise).delete(name, key);\n      },\n      async clear() {\n        return (await dbPromise).clear(name);\n      },\n      async keys() {\n        return (await dbPromise).getAllKeys(name);\n      },\n    }\n\n    return api;\n  })\n\n  return mapKeys(stores, (_, i) => storeNames[i]);\n}\n\nexport const { definations, dictionaries } = createStores(['definations', 'dictionaries']);\n","import { schema } from 'normalizr';\n\nexport const defination = new schema.Entity('definations');\n\nexport const word = new schema.Entity('words', {\n    explanations: [{ senses: [{ definations: [defination] }] }],\n  },\n);\n\ndefination.define({ word });\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport thunk from 'redux-thunk';\nimport reducer from './redux/reducer';\nimport App from './App';\nimport { restoreFromIndexedDB } from './redux/actions';\nimport * as db from './db';\nimport * as schema from './api/schema';\nimport './index.css';\n\n\nconst devtool = (process.env.NODE_ENV === 'development' && typeof window === 'object')\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    })\n    : compose;\n\n\nconst store = createStore(reducer, devtool(\n  applyMiddleware(thunk.withExtraArgument({ db, schema }))\n));\n\nstore.dispatch(restoreFromIndexedDB());\n\nrender(\n  <StoreContext.Provider value={store}>\n    <App />\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}